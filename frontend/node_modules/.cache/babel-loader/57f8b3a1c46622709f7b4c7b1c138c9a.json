{"ast":null,"code":"var _jsxFileName = \"D:\\\\oem\\\\frontend\\\\src\\\\components\\\\Order.js\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Order = ({\n  products,\n  orders\n}) => {\n  orders.map(order => {\n    const product = products.filter(product => product['_id'] === order['productId']); // const product0=product[0]\n    // console.log(1,product0.price)\n    // console.log(2,order.num)\n\n    order['price'] = (product[0]['price'] * order['num']).toFixed(2);\n  }); // console.log(1,orders)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      data: orders,\n      insertRow: true,\n      search: true,\n      children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        children: \"Order ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"customerId\",\n        filter: {\n          type: 'TextFilter',\n          delay: 1000\n        },\n        children: \"Customer Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"productId\",\n        filter: {\n          type: 'TextFilter',\n          delay: 1000\n        },\n        children: \"Product Id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"num\",\n        searchable: false,\n        children: \"Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"nation\",\n        searchable: false,\n        children: \"Nation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"price\",\n        searchable: false,\n        filter: {\n          type: 'NumberFilter',\n          delay: 1000,\n          numberComparators: ['>']\n        },\n        sort: \"true\",\n        children: \"Total Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["D:/oem/frontend/src/components/Order.js"],"names":["React","BootstrapTable","TableHeaderColumn","Order","products","orders","map","order","product","filter","toFixed","type","delay","numberComparators"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;;;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAClCA,EAAAA,MAAM,CAACC,GAAP,CAAWC,KAAK,IAAI;AAChB,UAAMC,OAAO,GAAGJ,QAAQ,CAACK,MAAT,CAAgBD,OAAO,IAAKA,OAAO,CAAC,KAAD,CAAP,KAAmBD,KAAK,CAAC,WAAD,CAApD,CAAhB,CADgB,CAEhB;AACA;AACA;;AACAA,IAAAA,KAAK,CAAC,OAAD,CAAL,GAAiB,CAACC,OAAO,CAAC,CAAD,CAAP,CAAW,OAAX,IAAsBD,KAAK,CAAC,KAAD,CAA5B,EAAqCG,OAArC,CAA6C,CAA7C,CAAjB;AACH,GAND,EADkC,CAQlC;;AACA,sBACI;AAAA,2BACI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEL,MAAtB;AAA8B,MAAA,SAAS,EAAE,IAAzC;AAA+C,MAAA,MAAM,EAAE,IAAvD;AAAA,8BACI,QAAC,iBAAD;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,MAAM,EAAE;AAACM,UAAAA,IAAI,EAAE,YAAP;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAyC,QAAA,MAAM,EAAE;AAACD,UAAAA,IAAI,EAAE,YAAP;AAAqBC,UAAAA,KAAK,EAAE;AAA5B,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAmC,QAAA,UAAU,EAAE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,UAAU,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,UAAU,EAAE,KAAjD;AAAwD,QAAA,MAAM,EAAG;AAC7DD,UAAAA,IAAI,EAAE,cADuD;AAE7DC,UAAAA,KAAK,EAAE,IAFsD;AAG7DC,UAAAA,iBAAiB,EAAE,CAAC,GAAD;AAH0C,SAAjE;AAII,QAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuBH,CAhCD;;KAAMV,K;AAmCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport {BootstrapTable, TableHeaderColumn} from \"react-bootstrap-table\";\r\n\r\n\r\nconst Order = ({products, orders}) => {\r\n    orders.map(order => {\r\n        const product = products.filter(product => (product['_id'] === order['productId']))\r\n        // const product0=product[0]\r\n        // console.log(1,product0.price)\r\n        // console.log(2,order.num)\r\n        order['price'] = (product[0]['price'] * order['num']).toFixed(2)\r\n    })\r\n    // console.log(1,orders)\r\n    return (\r\n        <>\r\n            <BootstrapTable data={orders} insertRow={true} search={true}>\r\n                <TableHeaderColumn isKey dataField='_id' >\r\n                    Order ID\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn dataField='customerId' filter={{type: 'TextFilter', delay: 1000}}>\r\n                    Customer Id\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn dataField='productId' filter={{type: 'TextFilter', delay: 1000}}>\r\n                    Product Id\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn dataField='num' searchable={false}>Number</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='nation' searchable={false}>Nation</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='price' searchable={false} filter={ {\r\n                    type: 'NumberFilter',\r\n                    delay: 1000,\r\n                    numberComparators: ['>']\r\n                } } sort='true'>Total Price</TableHeaderColumn>\r\n\r\n            </BootstrapTable>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Order;"]},"metadata":{},"sourceType":"module"}