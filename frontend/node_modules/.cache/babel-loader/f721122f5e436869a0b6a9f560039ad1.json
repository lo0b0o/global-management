{"ast":null,"code":"var _jsxFileName = \"D:\\\\oem\\\\frontend\\\\src\\\\components\\\\Product.js\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table'; // const productsInForm = products.map(product => {\n//     return {id: product._id,\n//         name: product.name,\n//         price: product.price,\n//         countInStock: product.countInStock}\n// })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Product = ({\n  products\n}) => {\n  // const formKey = [\"_id\",\"name\",]\n  // const productsInForm = products[formKey]\n  // const productsInForm = products.map(product => ({\n  //     id: product._id,\n  //     name: product.name,\n  //     price: product.price,\n  //     countInStock: product.countInStock,\n  //     nation: product.nation,\n  // }))\n  const onAfterInsertRow = row => {\n    let newRowStr = '';\n\n    for (const prop in row) {\n      newRowStr += prop + ': ' + row[prop] + ' \\n';\n    }\n\n    alert('The new row is:\\n ' + newRowStr);\n  };\n\n  const options = {\n    afterInsertRow: onAfterInsertRow // A hook for after insert rows\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n      data: products,\n      insertRow: true,\n      search: true,\n      children: [/*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        isKey: true,\n        dataField: \"_id\",\n        children: \"Product ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"name\",\n        children: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"description\",\n        hidden: \"true\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"price\",\n        searchable: false,\n        children: \"Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"image\",\n        hidden: \"true\",\n        searchable: false,\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"nation\",\n        searchable: false,\n        children: \"Nation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"countInStock\",\n        searchable: false,\n        children: \"Count In Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableHeaderColumn, {\n        dataField: \"SellerId\",\n        hidden: \"true\",\n        searchable: false,\n        children: \"Seller ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Product;\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["D:/oem/frontend/src/components/Product.js"],"names":["React","BootstrapTable","TableHeaderColumn","Product","products","onAfterInsertRow","row","newRowStr","prop","alert","options","afterInsertRow"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD,C,CAGA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,gBAAgB,GAAGC,GAAG,IAAI;AAC5B,QAAIC,SAAS,GAAG,EAAhB;;AAEA,SAAK,MAAMC,IAAX,IAAmBF,GAAnB,EAAwB;AACpBC,MAAAA,SAAS,IAAIC,IAAI,GAAG,IAAP,GAAcF,GAAG,CAACE,IAAD,CAAjB,GAA0B,KAAvC;AACH;;AACDC,IAAAA,KAAK,CAAC,uBAAuBF,SAAxB,CAAL;AACH,GAPD;;AASA,QAAMG,OAAO,GAAG;AACZC,IAAAA,cAAc,EAAEN,gBADJ,CACuB;;AADvB,GAAhB;AAIA,sBACI;AAAA,4BACI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAED,QAAtB;AAAgC,MAAA,SAAS,EAAE,IAA3C;AAAiD,MAAA,MAAM,EAAE,IAAzD;AAAA,8BACI,QAAC,iBAAD;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,aAA7B;AAA2C,QAAA,MAAM,EAAG,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,UAAU,EAAE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,MAAM,EAAG,MAA9C;AAAqD,QAAA,UAAU,EAAE,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,UAAU,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,UAAU,EAAE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,iBAAD;AAAmB,QAAA,SAAS,EAAC,UAA7B;AAAwC,QAAA,MAAM,EAAG,MAAjD;AAAwD,QAAA,UAAU,EAAE,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtCD;;KAAMD,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\n\r\n\r\n// const productsInForm = products.map(product => {\r\n//     return {id: product._id,\r\n//         name: product.name,\r\n//         price: product.price,\r\n//         countInStock: product.countInStock}\r\n// })\r\n\r\n\r\nconst Product = ({products}) => {\r\n    // const formKey = [\"_id\",\"name\",]\r\n    // const productsInForm = products[formKey]\r\n    // const productsInForm = products.map(product => ({\r\n    //     id: product._id,\r\n    //     name: product.name,\r\n    //     price: product.price,\r\n    //     countInStock: product.countInStock,\r\n    //     nation: product.nation,\r\n    // }))\r\n\r\n    const onAfterInsertRow = row => {\r\n        let newRowStr = '';\r\n\r\n        for (const prop in row) {\r\n            newRowStr += prop + ': ' + row[prop] + ' \\n';\r\n        }\r\n        alert('The new row is:\\n ' + newRowStr);\r\n    }\r\n\r\n    const options = {\r\n        afterInsertRow: onAfterInsertRow   // A hook for after insert rows\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <BootstrapTable data={products} insertRow={true} search={true}>\r\n                <TableHeaderColumn isKey dataField='_id'>Product ID</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='name'>Product Name</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='description' hidden = 'true'>Description</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='price' searchable={false}>Product Price</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='image' hidden = 'true' searchable={false}>Image</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='nation' searchable={false}>Nation</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='countInStock' searchable={false}>Count In Stock</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='SellerId' hidden = 'true' searchable={false}>Seller ID</TableHeaderColumn>\r\n            </BootstrapTable>,\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Product;"]},"metadata":{},"sourceType":"module"}